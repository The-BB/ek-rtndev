--- a/include/tscore/Allocator.h
+++ b/include/tscore/Allocator.h
@@ -45,7 +45,9 @@
 #include "tscore/ink_queue.h"
 #include "tscore/ink_defs.h"
 #include "tscore/ink_resource.h"
+#ifdef __GLIBC__
 #include <execinfo.h>
+#endif /* musl */
 
 #define RND16(_x) (((_x) + 15) & ~15)
 
--- a/include/tscore/ink_rwlock.h
+++ b/include/tscore/ink_rwlock.h
@@ -40,7 +40,7 @@ void ink_rwlock_destroy(ink_rwlock *rw);
 // Instead of calling ink_rwlock_init(), an ink_rwlock instance can be initialized with one of thsee values.
 //
 ink_rwlock const INK_RWLOCK_INIT = PTHREAD_RWLOCK_INITIALIZER;
-#if defined(linux)
+#if defined(linux) && defined(__GLIBC__) /* musl */
 ink_rwlock const INK_RWLOCK_INIT_NO_WRITER_STARVATION = PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP;
 #else
 // Testing indicates that for MacOS/Darwin and FreeBSD, pthread rwlocks always prevent writer starvation.
--- a/include/tscpp/util/TsSharedMutex.h
+++ b/include/tscpp/util/TsSharedMutex.h
@@ -207,7 +207,7 @@ private:
     }
   }
 
-#if defined(linux)
+#if defined(linux) && defined(__GLIBC__) /* musl */
   // Use the initializer that prevents writer starvation.
   //
   pthread_rwlock_t _lock = PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP;
--- a/iocore/eventsystem/P_UnixEThread.h
+++ b/iocore/eventsystem/P_UnixEThread.h
@@ -32,7 +32,9 @@
 
 #include "I_EThread.h"
 #include "I_EventProcessor.h"
+#ifdef __GLIBC__
 #include <execinfo.h>
+#endif /* musl */
 
 const ink_hrtime DELAY_FOR_RETRY = HRTIME_MSECONDS(10);
 
--- a/plugins/experimental/traffic_dump/json_utils.cc
+++ b/plugins/experimental/traffic_dump/json_utils.cc
@@ -21,6 +21,7 @@
   limitations under the License.
  */
 
+#include <cstdint> /* musl */
 #include <iomanip>
 #include <sstream>
 
--- a/src/tscore/ink_resource.cc
+++ b/src/tscore/ink_resource.cc
@@ -24,7 +24,9 @@
 #include "tscore/ink_assert.h"
 #include "tscore/ink_atomic.h"
 #include "tscore/ink_resource.h"
+#ifdef __GLIBC__
 #include <execinfo.h>
+#endif /* musl */
 
 int res_track_memory          = 0; // Disabled by default
 uint64_t ssl_memory_allocated = 0;
