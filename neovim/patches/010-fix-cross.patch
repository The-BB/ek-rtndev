--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -239,7 +239,7 @@ set(STYLUA_DIRS runtime scripts src test
 
 add_glob_target(
   TARGET lintlua-luacheck
-  COMMAND $<TARGET_FILE:nvim_bin>
+  COMMAND ${PROJECT_SOURCE_DIR}/build-native/bin/nvim
   FLAGS -ll ${PROJECT_SOURCE_DIR}/test/lua_runner.lua ${CMAKE_BINARY_DIR}/usr luacheck -q
   GLOB_DIRS runtime scripts src test
   GLOB_PAT *.lua
@@ -266,7 +266,7 @@ add_glob_target(
   TOUCH_STRATEGY PER_DIR)
 
 add_custom_target(lintcommit
-  COMMAND $<TARGET_FILE:nvim_bin> -u NONE -l ${PROJECT_SOURCE_DIR}/scripts/lintcommit.lua main)
+  COMMAND ${PROJECT_SOURCE_DIR}/build-native/bin/nvim -u NONE -l ${PROJECT_SOURCE_DIR}/scripts/lintcommit.lua main)
 add_dependencies(lintcommit nvim_bin)
 
 add_custom_target(lint)
--- a/runtime/CMakeLists.txt
+++ b/runtime/CMakeLists.txt
@@ -33,7 +33,7 @@ foreach(PACKAGE ${PACKAGES})
     add_custom_command(OUTPUT "${GENERATED_PACKAGE_DIR}/${PACKNAME}/doc/tags"
       COMMAND ${CMAKE_COMMAND} -E copy_directory
         ${PACKAGE} ${GENERATED_PACKAGE_DIR}/${PACKNAME}
-      COMMAND $<TARGET_FILE:nvim_bin>
+      COMMAND ${PROJECT_SOURCE_DIR}/build-native/bin/nvim
         -u NONE -i NONE -e --headless -c "helptags doc" -c quit
       DEPENDS
         nvim_bin
@@ -65,7 +65,7 @@ add_custom_command(OUTPUT ${GENERATED_HE
   COMMAND ${CMAKE_COMMAND} -E remove_directory doc
   COMMAND ${CMAKE_COMMAND} -E copy_directory
     ${PROJECT_SOURCE_DIR}/runtime/doc doc
-  COMMAND $<TARGET_FILE:nvim_bin>
+  COMMAND ${PROJECT_SOURCE_DIR}/build-native/bin/nvim
     -u NONE -i NONE -e --headless -c "helptags ++t doc" -c quit
   DEPENDS
     nvim_bin
--- a/src/nvim/CMakeLists.txt
+++ b/src/nvim/CMakeLists.txt
@@ -918,7 +918,7 @@ file(GLOB LUA_SOURCES CONFIGURE_DEPENDS
 )
 
 add_target(doc-vim
-  COMMAND $<TARGET_FILE:nvim_bin> -u NONE -l scripts/gen_vimdoc.lua
+  COMMAND ${PROJECT_SOURCE_DIR}/build-native/bin/nvim -u NONE -l scripts/gen_vimdoc.lua
   DEPENDS
     nvim
     ${API_SOURCES}
@@ -932,7 +932,7 @@ add_target(doc-vim
   )
 
 add_target(doc-eval
-  COMMAND $<TARGET_FILE:nvim_bin> -u NONE -l ${PROJECT_SOURCE_DIR}/scripts/gen_eval_files.lua
+  COMMAND ${PROJECT_SOURCE_DIR}/build-native/bin/nvim -u NONE -l ${PROJECT_SOURCE_DIR}/scripts/gen_eval_files.lua
   DEPENDS
     nvim
     ${FUNCS_METADATA}
@@ -947,7 +947,7 @@ add_custom_target(doc)
 add_dependencies(doc doc-vim doc-eval)
 
 add_target(lintdoc
-  COMMAND $<TARGET_FILE:nvim_bin> -u NONE -l scripts/lintdoc.lua
+  COMMAND ${PROJECT_SOURCE_DIR}/build-native/bin/nvim -u NONE -l scripts/lintdoc.lua
   DEPENDS ${DOCFILES}
   CUSTOM_COMMAND_ARGS USES_TERMINAL)
 add_dependencies(lintdoc nvim)
--- a/src/nvim/po/CMakeLists.txt
+++ b/src/nvim/po/CMakeLists.txt
@@ -53,14 +53,14 @@ if(HAVE_WORKING_LIBINTL AND GETTEXT_FOUN
   list(SORT NVIM_RELATIVE_SOURCES)
   add_custom_command(
     OUTPUT ${NVIM_POT}
-    COMMAND $<TARGET_FILE:nvim_bin> -u NONE -i NONE -n --headless --cmd "set cpo+=+"
+    COMMAND ${PROJECT_SOURCE_DIR}/build-native/bin/nvim -u NONE -i NONE -n --headless --cmd "set cpo+=+"
       -c "silent source ${CMAKE_CURRENT_SOURCE_DIR}/tojavascript.vim"
       ${NVIM_POT} ${PROJECT_SOURCE_DIR}/runtime/optwin.vim
     COMMAND ${XGETTEXT_PRG} -o ${NVIM_POT} --default-domain=nvim
       --add-comments --keyword=_ --keyword=N_ --keyword=NGETTEXT:1,2
       -D ${CMAKE_CURRENT_SOURCE_DIR} -D ${CMAKE_CURRENT_BINARY_DIR}
       ${NVIM_RELATIVE_SOURCES} optwin.js
-    COMMAND $<TARGET_FILE:nvim_bin> -u NONE -i NONE -n --headless --cmd "set cpo+=+"
+    COMMAND ${PROJECT_SOURCE_DIR}/build-native/bin/nvim -u NONE -i NONE -n --headless --cmd "set cpo+=+"
       -c "silent source ${CMAKE_CURRENT_SOURCE_DIR}/fixfilenames.vim"
       ${NVIM_POT} ${PROJECT_SOURCE_DIR}/runtime/optwin.vim
     VERBATIM
@@ -90,7 +90,7 @@ if(HAVE_WORKING_LIBINTL AND GETTEXT_FOUN
     set(poFile ${CMAKE_CURRENT_SOURCE_DIR}/${name}.po)
 
     add_custom_target(check-po-${name}
-      COMMAND $<TARGET_FILE:nvim_bin> -u NONE -n -e
+      COMMAND ${PROJECT_SOURCE_DIR}/build-native/bin/nvim -u NONE -n -e
           -S ${CMAKE_CURRENT_SOURCE_DIR}/check.vim
           -c "if error == 0 | q | endif" -c cq ${poFile} ||
           ${CMAKE_COMMAND} -E echo "${name}.po failed the check."
