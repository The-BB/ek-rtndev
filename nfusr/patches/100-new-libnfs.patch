--- a/NfsClient.cpp
+++ b/NfsClient.cpp
@@ -344,7 +344,7 @@ void NfsClient::getattrWithContext(RpcCo
     if (ctx->obtainConnection()) {
       setUidGid(*ctx, false);
       rpc_status =
-          rpc_nfs3_getattr_async(ctx->getRpcCtx(), getattrCallback, &args, ctx);
+          rpc_nfs3_getattr_task(ctx->getRpcCtx(), getattrCallback, &args, ctx);
       restoreUidGid(*ctx, false);
       ctx->unlockConnection();
     }
@@ -518,7 +518,7 @@ static void opendirContinue(OpendirRpcCo
     args.maxcount = 65536;
 
     if (have_connection || ctx->obtainConnection()) {
-      rpc_status = rpc_nfs3_readdirplus_async(
+      rpc_status = rpc_nfs3_readdirplus_task(
           ctx->getRpcCtx(), opendirCallback, &args, ctx);
       if (!have_connection) {
         ctx->unlockConnection();
@@ -620,7 +620,7 @@ void NfsClient::lookupWithContext(RpcCon
 
     if (ctx->obtainConnection()) {
       setUidGid(*ctx, false);
-      rpc_status = rpc_nfs3_lookup_async(
+      rpc_status = rpc_nfs3_lookup_task(
           ctx->getRpcCtx(), this->lookupCallback, &args, ctx);
       restoreUidGid(*ctx, false);
       ctx->unlockConnection();
@@ -688,7 +688,7 @@ void NfsClient::openWithContext(RpcConte
     if (ctx->obtainConnection()) {
       setUidGid(*ctx, false);
       rpc_status =
-          rpc_nfs3_access_async(ctx->getRpcCtx(), openCallback, &args, ctx);
+          rpc_nfs3_access_task(ctx->getRpcCtx(), openCallback, &args, ctx);
       restoreUidGid(*ctx, false);
       ctx->unlockConnection();
     }
@@ -749,7 +749,7 @@ void NfsClient::readWithContext(ReadRpcC
     if (ctx->obtainConnection()) {
       setUidGid(*ctx, false);
       rpc_status =
-          rpc_nfs3_read_async(ctx->getRpcCtx(), readCallback, &args, ctx);
+          rpc_nfs3_read_task(ctx->getRpcCtx(), readCallback, (size_t)NULL, (size_t)NULL, &args, ctx);
       restoreUidGid(*ctx, false);
       ctx->unlockConnection();
     }
@@ -839,7 +839,7 @@ void NfsClient::writeWithContext(WriteRp
     if (ctx->obtainConnection()) {
       setUidGid(*ctx, false);
       rpc_status =
-          rpc_nfs3_write_async(ctx->getRpcCtx(), writeCallback, &args, ctx);
+          rpc_nfs3_write_task(ctx->getRpcCtx(), writeCallback, &args, ctx);
       restoreUidGid(*ctx, false);
       ctx->unlockConnection();
     }
@@ -941,7 +941,7 @@ void NfsClient::create(
 
     if (ctx->obtainConnection()) {
       setUidGid(*ctx, true);
-      rpc_status = rpc_nfs3_create_async(
+      rpc_status = rpc_nfs3_create_task(
           ctx->getRpcCtx(), this->createCallback, &args, ctx);
       restoreUidGid(*ctx, true);
       ctx->unlockConnection();
@@ -984,7 +984,7 @@ void NfsClient::unlink(fuse_req_t req, f
           fuse_req_ctx(req)->uid);
       setUidGid(*ctx, false);
       rpc_status =
-          rpc_nfs3_remove_async(ctx->getRpcCtx(), unlinkCallback, &args, ctx);
+          rpc_nfs3_remove_task(ctx->getRpcCtx(), unlinkCallback, &args, ctx);
       restoreUidGid(*ctx, false);
       ctx->unlockConnection();
     }
@@ -1115,7 +1115,7 @@ void NfsClient::setattrWithContext(Setat
     if (ctx->obtainConnection()) {
       setUidGid(*ctx, false);
       rpc_status =
-          rpc_nfs3_setattr_async(ctx->getRpcCtx(), setattrCallback, &args, ctx);
+          rpc_nfs3_setattr_task(ctx->getRpcCtx(), setattrCallback, &args, ctx);
       restoreUidGid(*ctx, false);
       ctx->unlockConnection();
     }
@@ -1198,7 +1198,7 @@ void NfsClient::mkdir(
 
     if (ctx->obtainConnection()) {
       setUidGid(*ctx, true);
-      rpc_status = rpc_nfs3_mkdir_async(
+      rpc_status = rpc_nfs3_mkdir_task(
           ctx->getRpcCtx(), this->mkdirCallback, &args, ctx);
       restoreUidGid(*ctx, true);
       ctx->unlockConnection();
@@ -1236,7 +1236,7 @@ void NfsClient::rmdir(fuse_req_t req, fu
     if (ctx->obtainConnection()) {
       setUidGid(*ctx, false);
       rpc_status =
-          rpc_nfs3_rmdir_async(ctx->getRpcCtx(), rmdirCallback, &args, ctx);
+          rpc_nfs3_rmdir_task(ctx->getRpcCtx(), rmdirCallback, &args, ctx);
       restoreUidGid(*ctx, false);
       ctx->unlockConnection();
     }
@@ -1315,7 +1315,7 @@ void NfsClient::symlink(
 
     if (ctx->obtainConnection()) {
       setUidGid(*ctx, true);
-      rpc_status = rpc_nfs3_symlink_async(
+      rpc_status = rpc_nfs3_symlink_task(
           ctx->getRpcCtx(), this->symlinkCallback, &args, ctx);
       restoreUidGid(*ctx, true);
       ctx->unlockConnection();
@@ -1351,7 +1351,7 @@ void NfsClient::readlink(fuse_req_t req,
 
     if (ctx->obtainConnection()) {
       setUidGid(*ctx, false);
-      rpc_status = rpc_nfs3_readlink_async(
+      rpc_status = rpc_nfs3_readlink_task(
           ctx->getRpcCtx(), readlinkCallback, &args, ctx);
       restoreUidGid(*ctx, false);
       ctx->unlockConnection();
@@ -1435,7 +1435,7 @@ void NfsClient::rename(
     if (ctx->obtainConnection()) {
       setUidGid(*ctx, false);
       rpc_status =
-          rpc_nfs3_rename_async(ctx->getRpcCtx(), renameCallback, &args, ctx);
+          rpc_nfs3_rename_task(ctx->getRpcCtx(), renameCallback, &args, ctx);
       restoreUidGid(*ctx, false);
       ctx->unlockConnection();
     }
@@ -1508,7 +1508,7 @@ void NfsClient::link(
     if (ctx->obtainConnection()) {
       setUidGid(*ctx, false);
       rpc_status =
-          rpc_nfs3_link_async(ctx->getRpcCtx(), this->linkCallback, &args, ctx);
+          rpc_nfs3_link_task(ctx->getRpcCtx(), this->linkCallback, &args, ctx);
       restoreUidGid(*ctx, false);
       ctx->unlockConnection();
     }
@@ -1573,7 +1573,7 @@ void NfsClient::fsync(
     if (ctx->obtainConnection()) {
       setUidGid(*ctx, false);
       rpc_status =
-          rpc_nfs3_commit_async(ctx->getRpcCtx(), fsyncCallback, &args, ctx);
+          rpc_nfs3_commit_task(ctx->getRpcCtx(), fsyncCallback, &args, ctx);
       restoreUidGid(*ctx, false);
       ctx->unlockConnection();
     }
@@ -1622,7 +1622,7 @@ void NfsClient::statfsWithContext(RpcCon
     if (ctx->obtainConnection()) {
       setUidGid(*ctx, false);
       rpc_status =
-          rpc_nfs3_fsstat_async(ctx->getRpcCtx(), statfsCallback, &args, ctx);
+          rpc_nfs3_fsstat_task(ctx->getRpcCtx(), statfsCallback, &args, ctx);
       restoreUidGid(*ctx, false);
       ctx->unlockConnection();
     }
@@ -1695,7 +1695,7 @@ void NfsClient::accessWithContext(Access
     if (ctx->obtainConnection()) {
       setUidGid(*ctx, false);
       rpc_status =
-          rpc_nfs3_access_async(ctx->getRpcCtx(), accessCallback, &args, ctx);
+          rpc_nfs3_access_task(ctx->getRpcCtx(), accessCallback, &args, ctx);
       restoreUidGid(*ctx, false);
       ctx->unlockConnection();
     }
